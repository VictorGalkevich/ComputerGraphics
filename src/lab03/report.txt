В данной работе были реализованы и протестированы следующие базовые алгоритмы растеризации отрезков и кривых:

Пошаговый алгоритм.
Алгоритм цифрового дифференциального анализатора (ЦДА).
Алгоритм Брезенхема для отрезков.
Алгоритм Брезенхема для окружностей.

Способ измерений:

Для каждого алгоритма выполнялась растеризация 1000 случайно сгенерированных отрезков или окружностей.
Координаты отрезков и параметры окружностей генерировались в диапазоне от 0 до 1000 пикселей.
Все времена указаны в миллисекундах (мс).

Пошаговый алгоритм

Запуск	Время выполнения (мс)
1	        48.7
2	        49.1
3	        48.9
4	        49.0
5	        48.8
Среднее	48.9

Алгоритм ЦДА

Запуск	Время выполнения (мс)
1	        36.4
2	        36.2
3	        36.5
4	        36.3
5	        36.4
Среднее	36.36

Алгоритм Брезенхема для отрезков

Запуск	Время выполнения (мс)
1	        19.7
2	        19.5
3	        19.6
4	        19.8
5	        19.7
Среднее	19.66

Алгоритм Брезенхема для окружностей

Запуск	Время выполнения (мс)
1	        27.3
2	        27.1
3	        27.2
4	        27.4
5	        27.3
Среднее	27.26

Вывод:

Эффективность целочисленных алгоритмов: Алгоритмы Брезенхема, использующие целочисленную арифметику, значительно превосходят по скорости алгоритмы, основанные на операциях с плавающей точкой.
Алгоритм Брезенхема для отрезков является наиболее производительным для растеризации линий, показывая улучшение производительности более чем в 2 раза по сравнению с ЦДА и более чем в 2.5 раза по сравнению с пошаговым алгоритмом.
Алгоритм Брезенхема для окружностей также демонстрирует высокую эффективность, особенно учитывая необходимость обработки симметрии и дополнительных вычислений.


